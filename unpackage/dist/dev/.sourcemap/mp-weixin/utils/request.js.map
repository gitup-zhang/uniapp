{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["\n\n// const BASE_URL = import.meta.env.DEV ? '/api' : 'http://47.113.194.28:8080/api';\n\n// // 辅助函数：将对象参数转为 URL 查询字符串\n// function buildQuery(params) {\n//   return Object.entries(params)\n//     .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n//     .join('&');\n// }\n\n// // 通用请求方法\n// function request(url, method, data = {}, header = {}) {\n//   let requestUrl = url;\n//   const upperMethod = method.toUpperCase();\n\n//   // GET 请求时，将参数拼接到 URL\n//   if (upperMethod === 'GET' && Object.keys(data).length > 0) {\n//     const queryString = buildQuery(data);\n//     requestUrl += (requestUrl.includes('?') ? '&' : '?') + queryString;\n//   }\n\n//   return new Promise((resolve, reject) => {\n//     uni.request({\n//       url: BASE_URL + requestUrl,\n//       method: upperMethod,\n//       header: {\n//         'Content-Type': 'application/json',\n//         ...header\n//       },\n//       // POST/PUT 请求放在 data\n//       data: upperMethod === 'GET' ? undefined : data,\n//       success: (res) => {\n//         if (res.statusCode === 200) {\n//           resolve(res.data);\n//         } else {\n//           reject(res);\n//         }\n//       },\n//       fail: (err) => {\n//         uni.showToast({ title: '网络连接失败', icon: 'none' });\n//         reject(err);\n//       }\n//     });\n//   });\n// }\n\n// export default {\n//   get: (url, data, header) => request(url, 'GET', data, header),\n//   post: (url, data, header) => request(url, 'POST', data, header),\n// };\n// utils/request.js\n\n// 按平台设定 BASE_URL\nlet BASE_URL = '';\n\n// #ifdef H5\nBASE_URL = import.meta.env.DEV ? '/api' : 'http://47.113.194.28:8080/api';\n// #endif\n\n// #ifndef H5\nBASE_URL = 'http://47.113.194.28:8080/api';\n// #endif\n\n// ✅ 引入 pinia store\nimport { useInfoStore } from '@/store/Info.js'\n\n// 辅助函数：将对象参数转为 URL 查询字符串\nfunction buildQuery(params) {\n  return Object.entries(params)\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n    .join('&');\n}\n\n// 通用请求方法\nfunction request(url, method, data = {}, header = {}) {\n  const userStore = useInfoStore(); // ✅ 每次都动态获取\n  const token = userStore.token;\r\n  console.log(\"获取到的token：\"+token)\n\n  let requestUrl = url;\n  const upperMethod = method.toUpperCase();\n\n  if (upperMethod === 'GET' && Object.keys(data).length > 0) {\n    const queryString = buildQuery(data);\n    requestUrl += (requestUrl.includes('?') ? '&' : '?') + queryString;\n  }\n\n  return new Promise((resolve, reject) => {\n    uni.request({\n      url: BASE_URL + requestUrl,\n      method: upperMethod,\n      header: {\n        'Content-Type': 'application/json',\n        Authorization: token ? `Bearer ${token}` : '', // ✅ 加入 token\n        ...header\n      },\n      data: upperMethod === 'GET' ? undefined : data,\n      success: (res) => {\n        if (res.statusCode === 200) {\n          resolve(res.data);\n        } else if (res.statusCode === 401) {\n    // 登录失效，自动跳转登录\n    uni.removeStorageSync('token');\n   // uni.switchTab({\r\n   // \turl: '../mymessage/mymessage'\r\n   // });\n    reject(new Error('未登录或登录已过期'));\r\n\t\t\t} \r\n\t\telse {\n          reject(res);\n        }\n      },\n      fail: (err) => {\n        uni.showToast({ title: '网络连接失败', icon: 'none' });\n        reject(err);\n      }\n    });\n  });\n}\n\nexport default {\n  get: (url, data, header) => request(url, 'GET', data, header),\n  post: (url, data, header) => request(url, 'POST', data, header),\r\nput: (url, data, header) => request(url, 'PUT', data, header), \r\ndelete: (url, data, header) => request(url, 'DELETE', data, header) ,\n};\n"],"names":["useInfoStore","uni"],"mappings":";;;AAsDA,IAAI,WAAW;AAOf,WAAW;AAOX,SAAS,WAAW,QAAQ;AACnB,SAAA,OAAO,QAAQ,MAAM,EACzB,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,GAAG,mBAAmB,GAAG,CAAC,IAAI,mBAAmB,KAAK,CAAC,EAAE,EAC/E,KAAK,GAAG;AACb;AAGA,SAAS,QAAQ,KAAK,QAAQ,OAAO,CAAI,GAAA,SAAS,IAAI;AACpD,QAAM,YAAYA,WAAAA;AAClB,QAAM,QAAQ,UAAU;AACxBC,gBAAA,6CAAY,eAAa,KAAK;AAE9B,MAAI,aAAa;AACX,QAAA,cAAc,OAAO;AAE3B,MAAI,gBAAgB,SAAS,OAAO,KAAK,IAAI,EAAE,SAAS,GAAG;AACnD,UAAA,cAAc,WAAW,IAAI;AACnC,mBAAe,WAAW,SAAS,GAAG,IAAI,MAAM,OAAO;AAAA,EACzD;AAEA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCA,kBAAAA,MAAI,QAAQ;AAAA,MACV,KAAK,WAAW;AAAA,MAChB,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,gBAAgB;AAAA,QAChB,eAAe,QAAQ,UAAU,KAAK,KAAK;AAAA;AAAA,QAC3C,GAAG;AAAA,MACL;AAAA,MACA,MAAM,gBAAgB,QAAQ,SAAY;AAAA,MAC1C,SAAS,CAAC,QAAQ;AACZ,YAAA,IAAI,eAAe,KAAK;AAC1B,kBAAQ,IAAI,IAAI;AAAA,QAAA,WACP,IAAI,eAAe,KAAK;AAEvCA,8BAAI,kBAAkB,OAAO;AAItB,iBAAA,IAAI,MAAM,WAAW,CAAC;AAAA,QAAA,OAE1B;AACG,iBAAO,GAAG;AAAA,QACZ;AAAA,MACF;AAAA,MACA,MAAM,CAAC,QAAQ;AACbA,sBAAA,MAAI,UAAU,EAAE,OAAO,UAAU,MAAM,QAAQ;AAC/C,eAAO,GAAG;AAAA,MACZ;AAAA,IAAA,CACD;AAAA,EAAA,CACF;AACH;AAEA,MAAe,OAAA;AAAA,EACb,KAAK,CAAC,KAAK,MAAM,WAAW,QAAQ,KAAK,OAAO,MAAM,MAAM;AAAA,EAC5D,MAAM,CAAC,KAAK,MAAM,WAAW,QAAQ,KAAK,QAAQ,MAAM,MAAM;AAAA,EAChE,KAAK,CAAC,KAAK,MAAM,WAAW,QAAQ,KAAK,OAAO,MAAM,MAAM;AAAA,EAC5D,QAAQ,CAAC,KAAK,MAAM,WAAW,QAAQ,KAAK,UAAU,MAAM,MAAM;AAClE;;"}