{"version":3,"file":"Event.js","sources":["store/Event.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref } from 'vue'\nimport {getEventList,getEventDetail} from '@/new-apis/events.js'\n\nexport const useEventstore=defineStore('event',()=>{\n\tconst eventing=ref([])\n\tconst eventoutdate=ref([])\n\tconst eventcount=ref({\n\t\tEventbefore:0,\n\t\tEventing:0,\n\t\tEvented:0\n\t})\n\t\n\t// 进行中活动的分页相关状态\n\tconst currentPage = ref(1)\n\tconst pageSize = ref(10)\n\tconst hasMoreData = ref(true)\n\tconst isLoading = ref(false)\n\t\n\t// 历史活动的分页相关状态\n\tconst outdateCurrentPage = ref(1)\n\tconst outdatePageSize = ref(10)\n\tconst outdateHasMoreData = ref(true)\n\tconst outdateIsLoading = ref(false)\n\t\n\t// 获取的活动详情\n\tconst eventdetail=ref({})\n\t\n\t\n\t// 获取正在进行中的活动 - 修改为支持分页\n\tconst getlisting=async(num, loadMore = false)=>{\n\t\tif (isLoading.value) return\n\t\t\n\t\tisLoading.value = true\n\t\t\n\t\t// 如果不是加载更多，显示loading\n\t\tif (!loadMore) {\n\t\t\tuni.showLoading({\n\t\t\t  title: '加载中...',\n\t\t\t  mask: true\n\t\t\t})\n\t\t}\n\t\t\n\t\ttry{\n\t\t\tconst page = loadMore ? currentPage.value + 1 : 1\n\t\t\tconst res = await getEventList({\n\t\t\t\tpage: page,\n\t\t\t\tpage_size: num || pageSize.value,\n\t\t\t\tevent_status: \"InProgress\"\n\t\t\t})\n\t\t\t\n\t\t\tif (loadMore) {\n\t\t\t\t// 加载更多：追加数据\n\t\t\t\teventing.value = [...eventing.value, ...res.data]\n\t\t\t\tcurrentPage.value = page\n\t\t\t} else {\n\t\t\t\t// 首次加载：替换数据\n\t\t\t\teventing.value = res.data\n\t\t\t\tcurrentPage.value = 1\n\t\t\t}\n\t\t\t\n\t\t\t// 更新总数和是否还有更多数据\n\t\t\teventcount.value.Eventing = res.total\n\t\t\thasMoreData.value = eventing.value.length < res.total\n\t\t\t\n\t\t\tconsole.log(`已加载 ${eventing.value.length}/${res.total} 条活动数据`)\n\t\t\t\t\t \n\t\t}catch(error){\n\t\t\tconsole.log(error)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '加载失败',\n\t\t\t\ticon: 'error'\n\t\t\t})\n\t\t}finally{\n\t\t\tisLoading.value = false\n\t\t\tif (!loadMore) {\n\t\t\t\tuni.hideLoading()\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// 加载更多数据\n\tconst loadMoreEvents = async() => {\n\t\tif (!hasMoreData.value || isLoading.value) {\n\t\t\treturn\n\t\t}\n\t\tawait getlisting(pageSize.value, true)\n\t}\n\t\n\t// 刷新数据\n\tconst refreshEvents = async() => {\n\t\tcurrentPage.value = 1\n\t\thasMoreData.value = true\n\t\tawait getlisting(pageSize.value, false)\n\t}\n\t\n\t// 获取过期活动 - 修改为支持分页\n\tconst getlisoutdate=async(num, loadMore = false)=>{\n\t\tif (outdateIsLoading.value) return\n\t\t\n\t\toutdateIsLoading.value = true\n\t\t\n\t\t// 如果不是加载更多，显示loading\n\t\tif (!loadMore) {\n\t\t\tuni.showLoading({\n\t\t\t  title: '加载中...',\n\t\t\t  mask: true\n\t\t\t})\n\t\t}\n\t\t\n\t\ttry{\n\t\t\tconst page = loadMore ? outdateCurrentPage.value + 1 : 1\n\t\t\tconst res = await getEventList({\n\t\t\t\tpage: page,\n\t\t\t\tpage_size: num || outdatePageSize.value,\n\t\t\t\tevent_status: \"Completed\"\n\t\t\t})\n\t\t\t\n\t\t\tif (loadMore) {\n\t\t\t\t// 加载更多：追加数据\n\t\t\t\teventoutdate.value = [...eventoutdate.value, ...res.data]\n\t\t\t\toutdateCurrentPage.value = page\n\t\t\t} else {\n\t\t\t\t// 首次加载：替换数据\n\t\t\t\teventoutdate.value = res.data\n\t\t\t\toutdateCurrentPage.value = 1\n\t\t\t}\n\t\t\t\n\t\t\t// 更新总数和是否还有更多数据\n\t\t\teventcount.value.Evented = res.total\n\t\t\toutdateHasMoreData.value = eventoutdate.value.length < res.total\n\t\t\t\n\t\t\tconsole.log(`已加载历史活动 ${eventoutdate.value.length}/${res.total} 条`)\n\t\t\t\t\t \n\t\t}catch(error){\n\t\t\tconsole.log(error)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '加载失败',\n\t\t\t\ticon: 'error'\n\t\t\t})\n\t\t}finally{\n\t\t\toutdateIsLoading.value = false\n\t\t\tif (!loadMore) {\n\t\t\t\tuni.hideLoading()\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// 加载更多历史活动数据\n\tconst loadMoreOutdateEvents = async() => {\n\t\tif (!outdateHasMoreData.value || outdateIsLoading.value) {\n\t\t\treturn\n\t\t}\n\t\tawait getlisoutdate(outdatePageSize.value, true)\n\t}\n\t\n\t// 刷新历史活动数据\n\tconst refreshOutdateEvents = async() => {\n\t\toutdateCurrentPage.value = 1\n\t\toutdateHasMoreData.value = true\n\t\tawait getlisoutdate(outdatePageSize.value, false)\n\t}\n\t\n\t// 获取活动详情\n\tconst geteventdetail=async(id)=>{\n\t\tuni.showLoading({\n\t\t  title: '加载中...',\n\t\t  mask: true\n\t\t})\n\t\ttry{\n\t\tconst res=await getEventDetail(id)\n\t\teventdetail.value=res.data\t\n\t\t console.log(\"活动详情\",eventdetail.value)\n\t\t\t\t\t \n\t\t}catch(error){\n\t\t\tconsole.log(error)\n\t\t}finally{\n\t\t\tuni.hideLoading()\t\t\n\t\t}\n\t\t\n\t}\n\t\n\treturn {\n\t\teventing,\n\t\teventoutdate,\n\t\tgetlisting,\n\t\tgetlisoutdate,\n\t\tgeteventdetail,\n\t\teventdetail,\n\t\teventcount,\n\t\t// 进行中活动的分页相关\n\t\tcurrentPage,\n\t\tpageSize,\n\t\thasMoreData,\n\t\tisLoading,\n\t\tloadMoreEvents,\n\t\trefreshEvents,\n\t\t// 历史活动的分页相关\n\t\toutdateCurrentPage,\n\t\toutdatePageSize,\n\t\toutdateHasMoreData,\n\t\toutdateIsLoading,\n\t\tloadMoreOutdateEvents,\n\t\trefreshOutdateEvents\n\t}\n\t\n\t\n})"],"names":["defineStore","ref","uni","getEventList","getEventDetail"],"mappings":"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"}