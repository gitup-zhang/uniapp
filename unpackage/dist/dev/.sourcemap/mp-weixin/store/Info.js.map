{"version":3,"file":"Info.js","sources":["store/Info.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref } from 'vue'\nimport { getinfologin,getinfoprofile,updateprofile,IsUserRegistered } from '@/new-apis/info.js'\nimport {userRegisteredEvents} from '@/new-apis/events.js'\n//import { EAnimationBlendType } from 'XrFrame'\n\nexport const useInfoStore=defineStore('peopleinfo',()=>{\n\t// 个人信息\n\tlet info=ref({})\n\t\n\tconst token =ref(\"\")\n\t// 标志位，判断是否登录\n\tconst signal=ref(false)\r\n\t// 是否报名的标志位\r\n\tconst isapply=ref(false)\r\n\t// 已经报名的活动\r\n\tconst applyactivity=ref([])\r\n\tconst applyactivityhistory=ref([])\r\n\tconst eventcount=ref({\r\n\t\tEventbefore:0,\r\n\t\tEventing:0,\r\n\t\tEvented:0\r\n\t})\r\n\t\r\n\t// 持久化存储个人信息\r\n\tconst setToken = (t) => {\r\n\t    token.value = t\r\n\t    signal.value = true\r\n\t    uni.setStorageSync('token', t)\r\n\t}\r\n\t\r\n\t// 获取个人信息\n\tconst getinfo=async()=>{\n\t\tsignal.value=true\r\n\t\t\n\t\tconst res=await getinfoprofile()\r\n\t\tinfo.value=res.data\r\n\t\t\n\t}\r\n\t// 更新个人信息\r\n\tconst updateinfo=async(params)=>{\r\n\t\tconst res = await updateprofile(params)\r\n\t\t await getinfo()\r\n\t\treturn res\r\n\t}\n\tconst loginWithWeChat = async () => {\n\t  try {\n\t    // 1. 登录获取临时登录凭证 code\n\t    const loginRes = await uni.login({provider: 'weixin'});\n\t\n\t    if (loginRes.errMsg === \"login:ok\") {\n\t      const codes = loginRes.code;\n\t\t\tconsole.log(codes)\n\t      // 2. 发送 code 到你自己的后端\n\t      const res = await getinfologin({code:codes})\r\n\t\t  \n\t\t  // token.value=res.token\n\t\t  console.log(\"token:\"+token.value)\n\t\t\tif(res.code===200){\r\n\t\t\t\tsignal.value=true\r\n\t\t\t\tsetToken(res.token)\n\t\t\t\r\n\t\t\t\tconsole.log(\"登录成功\")\r\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t//       if (res.data.code === 200) {\n\t//         // 假设返回用户信息和你自己的token\n\t//         const userInfo = res.data.data;\n\t//         uni.setStorageSync('token', userInfo.token);\n\t//         uni.setStorageSync('userInfo', userInfo);\n\t\n\t//         uni.showToast({ title: '登录成功' });\n\t//       } else {\n\t//         uni.showToast({ title: '登录失败', icon: 'none' });\n\t//       }\n\t    }\n\t  } catch (err) {\n\t    console.error(\"登录失败\", err);\n\t  }\n\t};\n\tfunction deleteinfo(){\n\t\ttoken.value = ''\r\n\t\t    signal.value = false\r\n\t\t    info.value = {}\r\n\t\t    uni.removeStorageSync('token')\n\t}\r\n\t// 上传图片\r\n\tconst uploadimage = async (filepath) => {\r\n\t  return new Promise((resolve, reject) => {\r\n\t    uni.uploadFile({\r\n\t      url: 'http://47.113.194.28:8080/api/file/upload',\r\n\t      filePath: filepath,\r\n\t      name: 'file',\r\n\t\t  formData: {\r\n\t\t\tbiz_type: 'AVATAR' // 添加额外字段\r\n\t\t        },\r\n\t      header: {\r\n\t        'Content-Type': 'multipart/form-data',\r\n\t        Authorization: token.value ? `Bearer ${token.value}` : '',\r\n\t      },\r\n\t      success: (res) => {\r\n\t        try {\r\n\t          const data = JSON.parse(res.data) // 后端返回的通常是 JSON 字符串\r\n\t          console.log('上传成功:', data)\r\n\t          resolve(data) // 返回给调用者\r\n\t        } catch (e) {\r\n\t          console.error('解析失败:', e)\r\n\t          reject(e)\r\n\t        }\r\n\t      },\r\n\t      fail: (err) => {\r\n\t        console.error('上传失败:', err)\r\n\t        uni.showToast({\r\n\t          title: '上传失败',\r\n\t          icon: 'none'\r\n\t        })\r\n\t        reject(err)\r\n\t      }\r\n\t    })\r\n\t  })\r\n\t}\r\n\r\n\t\n\t\n\tconst getUserProfile = async () => {\n\t  uni.getUserProfile({\n\t    desc: '用于完善用户资料',\n\t    \n\t    success: async (userRes) => {\n\t      console.log(userRes);\n\t      const { encryptedData, iv } = userRes;\n\t\t  console.log(encryptedData)\n\t\n\t      try {\n\t        \n\t        const res = await getinfoprofile({ encryptedData: encryptedData, iv: iv ,token:token.value});\n\t        console.log(res); // 处理你的请求结果\n\t      } catch (error) {\n\t        console.error('请求出错:', error);\n\t      }\n\t    },\n\t    fail: (err) => {\n\t      console.error('用户拒绝授权:', err);\n\t    },\n\t  });\n\t};\r\n\t// 查询是否已经报名\r\n\t\r\n\tconst IsRegistered=async(id)=>{\r\n\t\ttry{\r\n\t\t\t\r\n\t\t\tconst res= await IsUserRegistered(id)\r\n\t\t\tconsole.log(\"报名信息：\",res)\r\n\t\t\tif(res.data.is_registered===\"N\"){\r\n\t\t\t\tconsole.log(\"没有报名\")\r\n\t\t\t\tisapply.value=false\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(\"已经报名\")\r\n\t\t\t\tisapply.value=true\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}catch(e){\r\n\t\t\tconsole.log(e)\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t// 查询已经报名的活动\r\n\tconst userapply=async()=>{\r\n\t\ttry{\r\n\t\t\tconst res=await userRegisteredEvents({event_status:\"InProgress\"})\r\n\t\t\tapplyactivity.value = Array.isArray(res.data) ? res.data : [];\r\n\t\t\t\r\n\t\t\t// 统计未开始和已开始的数量\r\n\t\t\tconst now = new Date();\r\n\t\t\t //eventcount.value = { Eventbefore: 0, Eventing: 0, Evented: 0 }\r\n\t\t\t let enting=0\r\n\t\t\t let ented=0\r\n\t\t\tapplyactivity.value.forEach(event => {\r\n\t\t\t  const start = new Date(event.event_start_time);\r\n\t\t\t  const end = new Date(event.event_end_time);\r\n\t\t\t\r\n\t\t\t  if (now >= start && now <= end) {\r\n\t\t\t    //eventcount.value.Eventing++;\r\n\t\t\t\tenting++\r\n\t\t\t  } else if (now < start) {\r\n\t\t\t     //eventcount.value.Eventbefore++;\r\n\t\t\t\tented++\r\n\t\t\t  }\r\n\t\t\t   eventcount.value.Eventing=enting\r\n\t\t\t   eventcount.value.Eventbefore=ented\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tconst reshistory=await userRegisteredEvents({event_status:\"Completed\"})\r\n\t\t\tapplyactivityhistory.value=Array.isArray(reshistory.data) ? reshistory.data : [];\r\n\t\t\teventcount.value.Evented=reshistory.total\r\n\t\t\t\r\n\t\t\tconsole.log(\"活动数量信息：\",eventcount)\r\n\t\t}catch(e){\r\n\t\t\tconsole.log(e)\r\n\t\t}\r\n\t}\n\n\t\n\t\n\treturn{\n\t\tinfo,\r\n\t\ttoken,\n\t\tsignal,\n\t\tgetinfo,\n\t\tdeleteinfo,\r\n\t\teventcount,\n\t\tloginWithWeChat,\n\t\tgetUserProfile,\r\n\t\tupdateinfo,\r\n\t\tuploadimage,\r\n\t\tsetToken,\r\n\t\tIsRegistered,\r\n\t\tisapply,\r\n\t\tuserapply,\r\n\t\tapplyactivity,\r\n\t\tapplyactivityhistory\n\t}\n\t\n})"],"names":["defineStore","ref","uni","getinfoprofile","updateprofile","getinfologin","IsUserRegistered","userRegisteredEvents"],"mappings":"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"}