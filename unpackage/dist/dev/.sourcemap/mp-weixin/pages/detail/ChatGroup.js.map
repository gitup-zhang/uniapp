{"version":3,"file":"ChatGroup.js","sources":["pages/detail/ChatGroup.vue","D:/Hbuild/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvZGV0YWlsL0NoYXRHcm91cC52dWU"],"sourcesContent":["<template>\n  <view class=\"admin-message-container\">\n    <!-- 自定义导航栏 -->\n    <view class=\"custom-navbar\">\n      <view class=\"status-bar\" :style=\"{ height: statusBarHeight + 'px' }\"></view>\n      <view class=\"nav-content\">\n        <view class=\"nav-left\" @tap=\"goBack\">\n          <view class=\"back-btn\">\n            <text class=\"back-icon\">‹</text>\n          </view>\n        </view>\n        <view class=\"nav-center\">\n          <text class=\"nav-title\">{{ groupName }}</text>\n          <text class=\"nav-subtitle\">管理员通知</text>\n        </view>\n        <view class=\"nav-right\"></view>\n      </view>\n    </view>\n\n    <!-- 消息列表区域 -->\n    <scroll-view\n      class=\"message-list\"\n      :style=\"{ marginTop: statusBarHeight + 8 + 'px' }\"\n      scroll-y=\"true\"\n      :scroll-into-view=\"scrollIntoView\"\n      :scroll-with-animation=\"true\"\n      @scrolltolower=\"onScrollToLower\"\n      \n      \n      :refresher-enabled=\"true\"\n      :refresher-triggered=\"refresherTriggered\"\n      refresher-background=\"#f8fafc\"\n      @refresherrefresh=\"onRefresherRefresh\"\n      @refresherrestore=\"onRefresherRestore\"\n    >\n      <!-- 自定义下拉刷新提示 -->\n      <!-- <view slot=\"refresher\" class=\"custom-refresher\">\n        <view class=\"refresher-content\">\n          <view class=\"refresher-icon\" :class=\"{ 'refresher-rotating': refresherTriggered }\">\n            <text class=\"refresh-symbol\">↻</text>\n          </view>\n          <text class=\"refresher-text\">{{ refresherText }}</text>\n        </view>\n      </view> -->\n\n      <view class=\"message-list-content\">\n        <!-- 按日期分组显示消息 -->\n        <template v-for=\"(group, dateKey) in groupedMessages\" :key=\"dateKey\">\n          <view class=\"date-divider\" v-if=\"Object.keys(groupedMessages).length > 1\">\n            <view class=\"date-line\"></view>\n            <text class=\"date-text\">{{ dateKey }}</text>\n            <view class=\"date-line\"></view>\n          </view>\n\n          <!-- 使用管理员消息组件 -->\n          <AdminMessage\n            v-for=\"message in group\"\n            :key=\"message.id\"\n            :message=\"message\"\n            @messageClick=\"handleMessageClick\"\n            @actionClick=\"handleActionClick\"\n            @markRead=\"handleMarkRead\"\n          />\n        </template>\n\n        <!-- 加载更多提示 -->\n        <view v-if=\"MesStore.loadingMore\" class=\"loading-more\">\n          <view class=\"loading-spinner-small\"></view>\n          <text class=\"loading-more-text\">加载更多...</text>\n        </view>\n\n        <!-- 没有更多数据提示 -->\n        <view v-if=\"!MesStore.hasMoreData && MesStore.MessageList.length > 0\" class=\"no-more-data\">\n          <text class=\"no-more-text\">没有更多消息了</text>\n        </view>\n\n        <!-- 没有消息提示 -->\n        <view v-if=\"MesStore.MessageList.length === 0 && !MesStore.loading\" class=\"empty-state\">\n          <view class=\"empty-icon\">📢</view>\n          <text class=\"empty-title\">暂无管理员消息</text>\n          <text class=\"empty-desc\">管理员发布的通知消息将在这里显示</text>\n        </view>\n      </view>\n    </scroll-view>\n\n    <!-- 加载遮罩 -->\n    <view v-if=\"MesStore.loading && MesStore.MessageList.length === 0\" class=\"loading-overlay\">\n      <view class=\"loading-content\">\n        <view class=\"loading-spinner\"></view>\n        <text class=\"loading-text\">加载中...</text>\n      </view>\n    </view>\n\n    <!-- 错误提示 -->\n    <view v-if=\"MesStore.error && !MesStore.loading\" class=\"error-overlay\">\n      <view class=\"error-content\">\n        <view class=\"error-icon\">⚠️</view>\n        <text class=\"error-title\">加载失败</text>\n        <text class=\"error-desc\">{{ MesStore.error }}</text>\n        <view class=\"error-actions\">\n          <view class=\"error-btn\" @tap=\"handleRetry\">\n            <text class=\"error-btn-text\">重试</text>\n          </view>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick, onUnmounted } from 'vue'\nimport { onLoad, onShow, onReachBottom } from '@dcloudio/uni-app'\nimport AdminMessage from '@/components/AdminMessage/AdminMessage.vue'\nimport { useMesstore } from '@/store/mes.js'\n\n// 页面参数\nconst props = defineProps({\n  id: String,\n  groupName: String\n})\n\n// 初始化pinia\nconst MesStore = useMesstore()\n\n// 页面状态\nconst statusBarHeight = ref(0)\nconst scrollIntoView = ref('')\nconst isFirstLoad = ref(true)\n\n// 群组信息\nconst groupId = ref('')\nconst groupName = ref('管理员通知')\n\n// 防抖控制\nconst loadMoreTimer = ref(null)\n\n// 下拉刷新相关状态\nconst refresherTriggered = ref(false)\nconst refresherText = ref('下拉刷新')\n\n// 生命周期\nonMounted(async () => {\n  const sysInfo = uni.getSystemInfoSync()\n  statusBarHeight.value = sysInfo.statusBarHeight || 0\n})\n\nonLoad(async (options) => {\n  console.log(\"跳转到的群组信息：\", options)\n  groupId.value = options.id || ''\n  groupName.value = decodeURIComponent(options.groupName || '管理员通知')\n  \n  MesStore.clearMessageList()\n  await loadInitialMessages()\n})\n\nonShow(() => {\n  isFirstLoad.value = false\n})\n\nonReachBottom(() => {\n  onScrollToLower()\n})\n\n// 计算属性\nconst groupedMessages = computed(() => {\n  const grouped = {}\n  \n  if (!MesStore.MessageList || !Array.isArray(MesStore.MessageList)) {\n    return grouped\n  }\n  \n  MesStore.MessageList.forEach(message => {\n    const date = new Date(message.created_at || message.send_time || message.updated_at)\n    const today = new Date()\n    const yesterday = new Date(today)\n    yesterday.setDate(yesterday.getDate() - 1)\n    \n    let dateKey = ''\n    if (isSameDay(date, today)) {\n      dateKey = '今天'\n    } else if (isSameDay(date, yesterday)) {\n      dateKey = '昨天'\n    } else if (date.getFullYear() === today.getFullYear()) {\n      dateKey = `${date.getMonth() + 1}月${date.getDate()}日`\n    } else {\n      dateKey = `${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日`\n    }\n    \n    if (!grouped[dateKey]) {\n      grouped[dateKey] = []\n    }\n    grouped[dateKey].push(message)\n  })\n  \n  Object.keys(grouped).forEach(dateKey => {\n    grouped[dateKey].sort((a, b) => {\n      const timeA = new Date(a.created_at || a.send_time || a.updated_at)\n      const timeB = new Date(b.created_at || b.send_time || b.updated_at)\n      return timeB - timeA\n    })\n  })\n  \n  return grouped\n})\n\nconst isSameDay = (date1, date2) => {\n  return date1.getFullYear() === date2.getFullYear() &&\n         date1.getMonth() === date2.getMonth() &&\n         date1.getDate() === date2.getDate()\n}\n\nconst loadInitialMessages = async () => {\n  try {\n    const params = {\n      message_type: 'EVENT',\n      event_id: groupId.value,\n      page: 1,\n      page_size: 20\n    }\n    \n    await MesStore.getMessageList(groupId.value,params)\n    \n    if (MesStore.MessageList.length > 0) {\n      setTimeout(() => {\n        scrollToTop()\n      }, 100)\n    }\n    \n  } catch (error) {\n    console.error('加载消息失败:', error)\n    uni.showToast({\n      title: '加载消息失败',\n      icon: 'error',\n      duration: 2000\n    })\n  }\n}\n\n// 下拉刷新处理\nconst onRefresherRefresh = async () => {\n  console.log('开始下拉刷新')\n  refresherTriggered.value = true\n  refresherText.value = '正在刷新...'\n  \n  try {\n    // 清空现有消息列表\n    // MesStore.clearMessageList()\n    \n    // 重新加载第一页数据\n    const params = {\n      message_type: 'EVENT',\n      event_id: groupId.value,\n      page: 1,\n      page_size: 20\n    }\n    \n    await MesStore.getMessageList(params)\n    \n    // 显示刷新成功提示\n    uni.showToast({\n      title: '刷新成功',\n      icon: 'success',\n      duration: 1500\n    })\n    \n    // 滚动到顶部\n    setTimeout(() => {\n      scrollToTop()\n    }, 100)\n    \n  } catch (error) {\n    console.error('刷新失败:', error)\n    uni.showToast({\n      title: '刷新失败',\n      icon: 'error',\n      duration: 2000\n    })\n  } finally {\n    // 结束刷新状态\n    setTimeout(() => {\n      refresherTriggered.value = false\n      refresherText.value = '下拉刷新'\n    }, 500)\n  }\n}\n\n// 刷新恢复处理\nconst onRefresherRestore = () => {\n  console.log('刷新恢复')\n  refresherText.value = '下拉刷新'\n}\n\nconst onScrollToLower = () => {\n  if (loadMoreTimer.value) {\n    clearTimeout(loadMoreTimer.value)\n  }\n  \n  if (!MesStore.hasMoreData || MesStore.loadingMore || MesStore.loading) {\n    return\n  }\n  \n  loadMoreTimer.value = setTimeout(async () => {\n    try {\n      const params = {\n        message_type: 'EVENT',\n        event_id: groupId.value,\n        page_size: 20\n      }\n      \n      const result = await MesStore.loadMoreMessages(params)\n      \n      if (result && result.success && result.data && result.data.length === 0) {\n        uni.showToast({\n          title: '没有更多数据',\n          icon: 'none',\n          duration: 1500\n        })\n      }\n      \n    } catch (error) {\n      console.error('加载更多失败:', error)\n    }\n  }, 300)\n}\n\nconst handleRetry = async () => {\n  await loadInitialMessages()\n}\n\nconst scrollToTop = () => {\n  nextTick(() => {\n    try {\n      if (MesStore.MessageList && MesStore.MessageList.length > 0) {\n        scrollIntoView.value = `msg-${MesStore.MessageList[0].id}`\n        \n        setTimeout(() => {\n          uni.pageScrollTo({\n            scrollTop: 0,\n            duration: 300\n          })\n        }, 100)\n      }\n    } catch (error) {\n      console.error('滚动到顶部失败:', error)\n    }\n  })\n}\n\nconst goBack = () => {\n  if (loadMoreTimer.value) {\n    clearTimeout(loadMoreTimer.value)\n  }\n  \n  uni.navigateBack()\n}\n\n// 事件处理方法\nconst handleMessageClick = (message) => {\n  try {\n    uni.navigateTo({\n      url: `/pages/detail/GroupMesDetail?id=${message.id}&title=${encodeURIComponent(message.title || '管理员通知')}`\n    })\n  } catch (error) {\n    console.error('跳转详情页失败:', error)\n    uni.showToast({\n      title: '跳转失败',\n      icon: 'error'\n    })\n  }\n}\n\nconst handleActionClick = async (action, message) => {\n  try {\n    switch (action.type) {\n      case 'primary':\n        if (action.url) {\n          uni.navigateTo({\n            url: `${action.url}?id=${message.id}`\n          })\n        }\n        break\n      case 'secondary':\n        if (action.id === 'mark_read') {\n          await markAsRead(message)\n        }\n        break\n      default:\n        uni.showToast({\n          title: '操作成功',\n          icon: 'success'\n        })\n    }\n  } catch (error) {\n    console.error('操作失败:', error)\n    uni.showToast({\n      title: '操作失败',\n      icon: 'error'\n    })\n  }\n}\n\nconst handleMarkRead = async (message) => {\n  await markAsRead(message)\n}\n\nconst markAsRead = async (message) => {\n  try {\n    if (message.message_type === 'SYSTEM') {\n      await MesStore.markSystemMessageAsRead(message.id)\n    } else {\n      await MesStore.markGroupMessageAsRead(message.id)\n    }\n    \n    uni.showToast({\n      title: '已标记为已读',\n      icon: 'success',\n      duration: 1500\n    })\n    \n  } catch (error) {\n    console.error('标记已读失败:', error)\n    uni.showToast({\n      title: '操作失败',\n      icon: 'error'\n    })\n  }\n}\n\n// 组件销毁时清理\nonUnmounted(() => {\n  if (loadMoreTimer.value) {\n    clearTimeout(loadMoreTimer.value)\n  }\n})\n</script>\n\n<style scoped>\n.admin-message-container {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background: #f8fafc;\n  overflow: hidden;\n}\n\n/* 导航栏样式 */\n.custom-navbar {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 50%, #b91c1c 100%);\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 1000;\n  box-shadow: 0 2rpx 16rpx rgba(102, 126, 234, 0.3);\n}\n\n.status-bar {\n  width: 100%;\n}\n\n.nav-content {\n  height: 88rpx;\n  display: flex;\n  align-items: center;\n  padding: 0 32rpx;\n  position: relative;\n}\n\n.nav-left {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 60rpx;\n  height: 60rpx;\n  border-radius: 50%;\n  transition: background-color 0.2s ease;\n}\n\n.nav-left:active {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.back-btn {\n  width: 64rpx;\n  height: 64rpx;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10rpx);\n}\n\n.back-btn:active {\n  background: rgba(255, 255, 255, 0.3);\n  transform: scale(0.95);\n}\n\n.back-icon {\n  font-size: 44rpx;\n  color: white;\n  font-weight: 300;\n  margin-left: -4rpx;\n}\n\n.nav-center {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 32rpx;\n}\n\n.nav-title {\n  font-size: 32rpx;\n  font-weight: 600;\n  color: white;\n  line-height: 1.2;\n}\n\n.nav-subtitle {\n  font-size: 22rpx;\n  color: rgba(255, 255, 255, 0.8);\n  margin-top: 4rpx;\n}\n\n.nav-right {\n  width: 60rpx;\n}\n\n/* 消息列表样式 */\n.message-list {\n  flex: 1;\n  background: #f8fafc;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n\n.message-list-content {\n  padding-top: calc(8rpx + var(--status-bar-height, 44px) + 40rpx);\n  padding-left: 24rpx;\n  padding-right: 24rpx;\n  padding-bottom: 100rpx;\n  min-height: calc(100vh + 120rpx);\n}\n\n/* 自定义下拉刷新样式 */\n.custom-refresher {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20rpx 0;\n  background: #f8fafc;\n}\n\n.refresher-content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16rpx;\n}\n\n.refresher-icon {\n  width: 60rpx;\n  height: 60rpx;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: transform 0.3s ease;\n}\n\n.refresher-rotating {\n  animation: refresher-rotate 1s linear infinite;\n}\n\n.refresh-symbol {\n  font-size: 32rpx;\n  color: white;\n  font-weight: bold;\n}\n\n.refresher-text {\n  font-size: 26rpx;\n  color: #64748b;\n  font-weight: 500;\n}\n\n@keyframes refresher-rotate {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* 日期分隔线 */\n.date-divider {\n  display: flex;\n  align-items: center;\n  margin: 40rpx 0 32rpx;\n}\n\n.date-line {\n  flex: 1;\n  height: 2rpx;\n  background: #e2e8f0;\n}\n\n.date-text {\n  font-size: 24rpx;\n  color: #64748b;\n  padding: 0 24rpx;\n  background: #f8fafc;\n}\n\n/* 加载更多样式 */\n.loading-more {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40rpx 0;\n  gap: 16rpx;\n}\n\n.loading-spinner-small {\n  width: 32rpx;\n  height: 32rpx;\n  border: 4rpx solid #e2e8f0;\n  border-top: 4rpx solid #667eea;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.loading-more-text {\n  font-size: 26rpx;\n  color: #64748b;\n}\n\n/* 没有更多数据 */\n.no-more-data {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40rpx 0;\n}\n\n.no-more-text {\n  font-size: 24rpx;\n  color: #94a3b8;\n}\n\n/* 空状态 */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 120rpx 40rpx;\n  gap: 24rpx;\n}\n\n.empty-icon {\n  font-size: 120rpx;\n  opacity: 0.6;\n}\n\n.empty-title {\n  font-size: 32rpx;\n  font-weight: 600;\n  color: #334155;\n}\n\n.empty-desc {\n  font-size: 26rpx;\n  color: #64748b;\n  text-align: center;\n  line-height: 1.6;\n}\n\n/* 加载样式 */\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n}\n\n.loading-content {\n  background: white;\n  border-radius: 24rpx;\n  padding: 48rpx;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 24rpx;\n  box-shadow: 0 16rpx 48rpx rgba(0, 0, 0, 0.2);\n}\n\n.loading-spinner {\n  width: 48rpx;\n  height: 48rpx;\n  border: 4rpx solid #e5e7eb;\n  border-top-color: #3b82f6;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.loading-text {\n  font-size: 28rpx;\n  color: #64748b;\n  margin-top: 16rpx;\n}\n\n/* 错误提示 */\n.error-overlay {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 9999;\n}\n\n.error-content {\n  background: white;\n  border-radius: 24rpx;\n  padding: 48rpx;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 24rpx;\n  box-shadow: 0 16rpx 48rpx rgba(0, 0, 0, 0.2);\n  min-width: 400rpx;\n}\n\n.error-icon {\n  font-size: 80rpx;\n}\n\n.error-title {\n  font-size: 32rpx;\n  font-weight: 600;\n  color: #ef4444;\n}\n\n.error-desc {\n  font-size: 26rpx;\n  color: #64748b;\n  text-align: center;\n  line-height: 1.5;\n}\n\n.error-actions {\n  display: flex;\n  gap: 16rpx;\n  margin-top: 16rpx;\n}\n\n.error-btn {\n  padding: 16rpx 32rpx;\n  background: #667eea;\n  border-radius: 48rpx;\n  transition: all 0.3s ease;\n}\n\n.error-btn:active {\n  background: #5a67d8;\n  transform: scale(0.95);\n}\n\n.error-btn-text {\n  font-size: 26rpx;\n  color: white;\n}\n\n/* 动画 */\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* 响应式设计 */\n@media (max-width: 750rpx) {\n  .message-list-content {\n    padding-top: calc(88rpx + var(--status-bar-height, 44px) + 30rpx);\n    padding-left: 16rpx;\n    padding-right: 16rpx;\n    padding-bottom: 80rpx;\n  }\n  \n  .empty-state {\n    padding: 80rpx 32rpx;\n  }\n}\n\n/* 暗黑模式适配 */\n@media (prefers-color-scheme: dark) {\n  .admin-message-container {\n    background: #0f172a;\n  }\n  \n  .message-list {\n    background: #0f172a;\n  }\n  \n  .custom-refresher {\n    background: #0f172a;\n  }\n  \n  .date-text {\n    background: #0f172a;\n    color: #64748b;\n  }\n  \n  .date-line {\n    background: #334155;\n  }\n  \n  .empty-title {\n    color: #f1f5f9;\n  }\n  \n  .empty-desc {\n    color: #94a3b8;\n  }\n  \n  .loading-content {\n    background: #1e293b;\n  }\n  \n  .error-content {\n    background: #1e293b;\n  }\n  \n  .loading-more-text {\n    color: #94a3b8;\n  }\n  \n  .no-more-text {\n    color: #64748b;\n  }\n}\n</style>","import MiniProgramPage from 'E:/project/uniapp/uniapp-news/pages/detail/ChatGroup.vue'\nwx.createPage(MiniProgramPage)"],"names":["useMesstore","ref","onMounted","uni","onLoad","onShow","onReachBottom","computed","nextTick","onUnmounted"],"mappings":"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"}