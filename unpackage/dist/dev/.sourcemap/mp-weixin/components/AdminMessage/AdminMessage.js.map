{"version":3,"file":"AdminMessage.js","sources":["components/AdminMessage/AdminMessage.vue","D:/Hbuild/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RTovcHJvamVjdC91bmlhcHAvdW5pYXBwLW5ld3MvY29tcG9uZW50cy9BZG1pbk1lc3NhZ2UvQWRtaW5NZXNzYWdlLnZ1ZQ"],"sourcesContent":["<template>\n  <view class=\"admin-message-item\">\n    <!-- 管理员消息 -->\n    <view class=\"admin-message\">\n      <!-- 管理员头像 -->\n      <view class=\"avatar-wrapper\">\n        <view class=\"admin-avatar\">\n          <text class=\"avatar-text\">管</text>\n        </view>\n        <view class=\"admin-badge\">\n          <text class=\"badge-text\">管理员</text>\n        </view>\n      </view>\n\n      <!-- 消息内容区域 -->\n      <view class=\"message-content-wrapper\">\n        <!-- 消息头部 -->\n        <view class=\"message-header\">\n          <text class=\"sender-name\">{{ message.sender_name || '系统管理员' }}</text>\n          <text class=\"message-time\">{{ formatMessageTime(message.send_time) }}</text>\n        </view>\n\n        <!-- 消息气泡 -->\n        <view \n          class=\"message-bubble\" \n          :class=\"{ \n            'clickable': contentLevel === 'long'\n          }\"\n          @tap=\"handleMessageTap\"\n        >\n          <!-- 消息标题 -->\n          <view v-if=\"message.title\" class=\"message-title\">\n            <text class=\"title-text\">{{ message.title }}</text>\n          </view>\n\n          <!-- 消息内容 -->\n          <view class=\"message-content\">\n            <!-- 富文本内容 -->\n            <view v-if=\"displayContent\" class=\"rich-text-content\">\n              <rich-text \n                :nodes=\"getDisplayNodes()\" \n                class=\"rich-text\"\n                @itemclick=\"handleRichTextClick\"\n              ></rich-text>\n            </view>\n            \n            <!-- 展开/收起按钮（中等长度内容） -->\n            <view \n              v-if=\"contentLevel === 'medium'\" \n              class=\"expand-btn\"\n              @tap.stop=\"toggleExpand\"\n            >\n              <text class=\"expand-text\">\n                {{ isExpanded ? '收起' : '查看全部' }}\n              </text>\n              <text class=\"expand-icon\" :class=\"{ 'rotated': isExpanded }\">\n                ▼\n              </text>\n            </view>\n          </view>\n\n          <!-- 点击查看详情提示（长内容） -->\n          <view v-if=\"contentLevel === 'long'\" class=\"view-detail-hint\">\n            <text class=\"hint-text\">点击查看详情</text>\n            <text class=\"hint-arrow\">›</text>\n          </view>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, computed, defineProps, defineEmits } from 'vue'\n\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['messageClick', 'actionClick', 'markRead'])\n\n// 组件状态\nconst isExpanded = ref(false)\n\n// 内容长度阈值（基于纯文本长度）\nconst SHORT_LIMIT = 50    // 短内容阈值\nconst MEDIUM_LIMIT = 200  // 中等内容阈值\n\n// 解析富文本内容\nconst { displayContent, plainTextLength, imageCount } = parseRichTextContent(props.message.content || '')\n\n// 计算内容级别\nconst contentLevel = computed(() => {\n  if (plainTextLength <= SHORT_LIMIT && imageCount === 0) {\n    return 'short'  // 短内容\n  } else if (plainTextLength <= MEDIUM_LIMIT) {\n    return 'medium' // 中等内容\n  } else {\n    return 'long'   // 长内容\n  }\n})\n\n// 解析富文本内容，获取纯文本长度和媒体数量\nfunction parseRichTextContent(content) {\n  if (!content) return { displayContent: '', plainTextLength: 0, imageCount: 0 }\n  \n  let plainTextLength = 0\n  let imageCount = 0\n  let displayContent = content\n  \n  // 如果传入的是字符串，直接使用\n  if (typeof content === 'string') {\n    // 计算纯文本长度（移除HTML标签）\n    const textOnly = content.replace(/<[^>]*>/g, '')\n    plainTextLength = textOnly.length\n    \n    // 计算图片数量\n    const imgMatches = content.match(/<img[^>]*>/g)\n    imageCount = imgMatches ? imgMatches.length : 0\n    \n    displayContent = content\n  } \n  // 如果传入的是富文本节点数组\n  else if (Array.isArray(content)) {\n    displayContent = content\n    \n    // 递归计算纯文本长度和图片数量\n    const calculateStats = (nodes) => {\n      for (const node of nodes) {\n        if (typeof node === 'string') {\n          plainTextLength += node.length\n        } else if (node.type === 'text') {\n          plainTextLength += (node.text || '').length\n        } else if (node.name === 'img') {\n          imageCount++\n        } else if (node.children && Array.isArray(node.children)) {\n          calculateStats(node.children)\n        }\n      }\n    }\n    \n    calculateStats(content)\n  }\n  \n  return { displayContent, plainTextLength, imageCount }\n}\n\n// 获取要显示的富文本节点\nconst getDisplayNodes = () => {\n  if (!displayContent) return []\n  \n  // 如果是字符串格式的HTML\n  if (typeof displayContent === 'string') {\n    let htmlContent = displayContent\n    \n    // 对于中等长度内容且未展开时，截取内容\n    if (contentLevel.value === 'medium' && !isExpanded.value) {\n      // 获取纯文本用于判断是否需要截取\n      const textOnly = htmlContent\n        .replace(/<[^>]*>/g, '')\n        .replace(/&nbsp;/g, ' ')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&amp;/g, '&')\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\")\n        .replace(/\\s+/g, ' ')\n        .trim()\n        \n      if (textOnly.length > MEDIUM_LIMIT) {\n        // 简单的HTML截取（保持标签完整性）\n        const truncatedText = textOnly.substring(0, MEDIUM_LIMIT) + '...'\n        // 如果原内容主要是纯文本，直接截取\n        if (htmlContent.indexOf('<') === -1 || htmlContent.match(/<[^>]*>/g)?.length <= 2) {\n          htmlContent = truncatedText\n        } else {\n          // 对于复杂HTML，尝试智能截取\n          htmlContent = truncateHtmlString(htmlContent, MEDIUM_LIMIT)\n        }\n      }\n    }\n    \n    // 对于长内容，显示摘要\n    if (contentLevel.value === 'long') {\n      const textOnly = htmlContent\n        .replace(/<[^>]*>/g, '')\n        .replace(/&nbsp;/g, ' ')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&amp;/g, '&')\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\")\n        .replace(/\\s+/g, ' ')\n        .trim()\n        \n      const summaryText = textOnly.substring(0, SHORT_LIMIT) + '...'\n      \n      // 如果原内容主要是纯文本，显示摘要\n      if (htmlContent.indexOf('<') === -1 || htmlContent.match(/<[^>]*>/g)?.length <= 2) {\n        htmlContent = summaryText\n      } else {\n        // 对于复杂HTML，显示纯文本摘要或智能截取\n        htmlContent = truncateHtmlString(htmlContent, SHORT_LIMIT) || `<p>${summaryText}</p>`\n      }\n    }\n    \n    return htmlContent\n  }\n  \n  // 如果是节点数组格式\n  if (Array.isArray(displayContent)) {\n    // 对于中等长度内容的截取处理\n    if (contentLevel.value === 'medium' && !isExpanded.value) {\n      // 先检查实际文本长度是否需要截取\n      const actualLength = calculateTextLength(displayContent)\n      if (actualLength > MEDIUM_LIMIT) {\n        return truncateRichTextNodes(displayContent, MEDIUM_LIMIT)\n      }\n    }\n    \n    // 对于长内容的摘要处理\n    if (contentLevel.value === 'long') {\n      const actualLength = calculateTextLength(displayContent)\n      if (actualLength > SHORT_LIMIT) {\n        return truncateRichTextNodes(displayContent, SHORT_LIMIT)\n      }\n    }\n    \n    return displayContent\n  }\n  \n  return []\n}\n\n// 截取HTML字符串（简单实现）\nfunction truncateHtmlString(html, limit) {\n  // 这是一个简化的HTML截取实现\n  // 在实际项目中，建议使用专门的HTML截取库\n  const textOnly = html\n    .replace(/<[^>]*>/g, '')\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&amp;/g, '&')\n    .replace(/&quot;/g, '\"')\n    .replace(/&#39;/g, \"'\")\n    .replace(/\\s+/g, ' ')\n    .trim()\n    \n  if (textOnly.length <= limit) {\n    return html\n  }\n  \n  // 简单截取：如果主要是文本，直接截取文本\n  if (html.match(/<[^>]*>/g)?.length <= 3) {\n    return textOnly.substring(0, limit) + '...'\n  }\n  \n  // 对于复杂HTML，返回null让调用者使用备用方案\n  return null\n}\n\n// 截取富文本节点（保持结构完整）\nfunction truncateRichTextNodes(nodes, limit) {\n  let currentLength = 0\n  const result = []\n  \n  for (const node of nodes) {\n    if (currentLength >= limit) break\n    \n    if (typeof node === 'string') {\n      const remaining = limit - currentLength\n      if (node.length <= remaining) {\n        result.push(node)\n        currentLength += node.length\n      } else {\n        result.push(node.substring(0, remaining) + '...')\n        break\n      }\n    } else if (node.type === 'text') {\n      const text = node.text || ''\n      const remaining = limit - currentLength\n      if (text.length <= remaining) {\n        result.push(node)\n        currentLength += text.length\n      } else {\n        result.push({\n          ...node,\n          text: text.substring(0, remaining) + '...'\n        })\n        break\n      }\n    } else if (node.name === 'img') {\n      // 图片直接添加，不计入文本长度限制\n      result.push(node)\n    } else if (node.children) {\n      // 递归处理有子节点的元素\n      const remaining = limit - currentLength\n      const truncatedChildren = truncateRichTextNodes(node.children, remaining)\n      \n      // 计算子节点的文本长度\n      const childrenLength = calculateTextLength(truncatedChildren)\n      \n      if (childrenLength > 0) {\n        result.push({\n          ...node,\n          children: truncatedChildren\n        })\n        currentLength += childrenLength\n      }\n    } else {\n      result.push(node)\n    }\n  }\n  \n  return result\n}\n\n// 计算富文本节点的文本长度\nfunction calculateTextLength(nodes) {\n  let length = 0\n  \n  for (const node of nodes) {\n    if (typeof node === 'string') {\n      length += node.length\n    } else if (node.type === 'text') {\n      length += (node.text || '').length\n    } else if (node.children) {\n      length += calculateTextLength(node.children)\n    }\n  }\n  \n  return length\n}\n\n// 切换展开状态\nconst toggleExpand = () => {\n  isExpanded.value = !isExpanded.value\n}\n\n// 处理富文本中的点击事件\nconst handleRichTextClick = (e) => {\n  console.log('Rich text item clicked:', e.detail)\n  \n  // 处理图片点击预览\n  if (e.detail.node && e.detail.node.name === 'img') {\n    const imgSrc = e.detail.node.attrs?.src\n    if (imgSrc) {\n      // 获取所有图片URL用于预览\n      const allImages = getAllImageUrls()\n      uni.previewImage({\n        current: imgSrc,\n        urls: allImages\n      })\n    }\n  }\n  \n  // 处理链接点击\n  if (e.detail.node && e.detail.node.name === 'a') {\n    const href = e.detail.node.attrs?.href\n    if (href) {\n      // 处理链接跳转\n      console.log('Link clicked:', href)\n      // 可以在这里添加链接处理逻辑\n    }\n  }\n}\n\n// 获取所有图片URL\nconst getAllImageUrls = () => {\n  const urls = []\n  \n  const extractImages = (content) => {\n    if (typeof content === 'string') {\n      // 从HTML字符串中提取图片\n      const imgRegex = /<img[^>]+src=['\"]([^'\"]+)['\"][^>]*>/g\n      let match\n      while ((match = imgRegex.exec(content)) !== null) {\n        urls.push(match[1])\n      }\n    } else if (Array.isArray(content)) {\n      // 从节点数组中提取图片\n      const findImages = (nodes) => {\n        for (const node of nodes) {\n          if (node.name === 'img' && node.attrs?.src) {\n            urls.push(node.attrs.src)\n          } else if (node.children) {\n            findImages(node.children)\n          }\n        }\n      }\n      findImages(content)\n    }\n  }\n  \n  extractImages(displayContent)\n  return urls\n}\n\n// 格式化消息时间\nconst formatMessageTime = (timeStr) => {\n  if (!timeStr) return ''\n  \n  const time = new Date(timeStr)\n  const now = new Date()\n  \n  const isSameDay = (date1, date2) => {\n    return date1.getFullYear() === date2.getFullYear() &&\n           date1.getMonth() === date2.getMonth() &&\n           date1.getDate() === date2.getDate()\n  }\n  \n  if (isSameDay(time, now)) {\n    return `${String(time.getHours()).padStart(2, '0')}:${String(time.getMinutes()).padStart(2, '0')}`\n  } else {\n    return `${time.getMonth() + 1}-${time.getDate()} ${String(time.getHours()).padStart(2, '0')}:${String(time.getMinutes()).padStart(2, '0')}`\n  }\n}\n\n// 处理消息点击\nconst handleMessageTap = () => {\n  // 对于长内容，直接跳转到详情页\n  if (contentLevel.value === 'long') {\n    emit('messageClick', props.message)\n    return\n  }\n  \n  // 短内容和中等长度内容不做任何操作，中等长度内容通过专门的展开/收起按钮处理\n}\n\n// 处理操作按钮点击\nconst handleAction = (action) => {\n  emit('actionClick', action, props.message)\n}\n</script>\n\n<style scoped>\n.admin-message-item {\n  margin-bottom: 24rpx;\n  animation: fadeInUp 0.4s ease-out;\n}\n\n/* 管理员消息样式 */\n.admin-message {\n  display: flex;\n  gap: 20rpx;\n  align-items: flex-start;\n}\n\n/* 管理员头像 */\n.avatar-wrapper {\n  flex-shrink: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8rpx;\n}\n\n.admin-avatar {\n  width: 80rpx;\n  height: 80rpx;\n  border-radius: 20rpx;\n  background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4rpx 12rpx rgba(245, 158, 11, 0.3);\n}\n\n.avatar-text {\n  font-size: 28rpx;\n  font-weight: 700;\n  color: white;\n}\n\n.admin-badge {\n  background: #f59e0b;\n  color: white;\n  font-size: 18rpx;\n  padding: 4rpx 12rpx;\n  border-radius: 20rpx;\n  box-shadow: 0 2rpx 8rpx rgba(245, 158, 11, 0.2);\n}\n\n.badge-text {\n  font-size: 18rpx;\n  font-weight: 600;\n  color: white;\n}\n\n/* 消息内容包装器 */\n.message-content-wrapper {\n  flex: 1;\n  max-width: calc(100% - 120rpx);\n}\n\n/* 消息头部 */\n.message-header {\n  display: flex;\n  align-items: center;\n  gap: 16rpx;\n  margin-bottom: 12rpx;\n}\n\n.sender-name {\n  font-size: 26rpx;\n  color: #334155;\n  font-weight: 600;\n}\n\n.message-time {\n  font-size: 22rpx;\n  color: #94a3b8;\n}\n\n/* 消息气泡 */\n.message-bubble {\n  background: white;\n  border-radius: 20rpx;\n  padding: 24rpx;\n  box-shadow: 0 2rpx 12rpx rgba(0, 0, 0, 0.08);\n  border: 2rpx solid #f1f5f9;\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.message-bubble.clickable {\n  cursor: pointer;\n}\n\n.message-bubble.clickable:hover {\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.12);\n  border-color: #e2e8f0;\n}\n\n.message-bubble.clickable:active {\n  transform: scale(0.98);\n  transition: transform 0.1s ease;\n}\n\n/* 消息标题 */\n.message-title {\n  display: flex;\n  align-items: center;\n  gap: 12rpx;\n  margin-bottom: 16rpx;\n  padding-bottom: 16rpx;\n  border-bottom: 2rpx solid #f1f5f9;\n}\n\n.title-text {\n  font-size: 30rpx;\n  font-weight: 600;\n  color: #1e293b;\n  line-height: 1.4;\n  flex: 1;\n}\n\n/* 消息内容 */\n.message-content {\n  margin-bottom: 16rpx;\n}\n\n/* 富文本内容样式 */\n.rich-text-content {\n  margin-bottom: 16rpx;\n}\n\n.rich-text {\n  font-size: 28rpx;\n  line-height: 1.6;\n  color: #334155;\n  word-break: break-word;\n}\n\n/* 富文本内部元素样式 */\n.rich-text :deep(p) {\n  margin: 12rpx 0;\n  line-height: 1.6;\n}\n\n.rich-text :deep(h1) {\n  font-size: 36rpx;\n  font-weight: 700;\n  margin: 20rpx 0 16rpx 0;\n  color: #1e293b;\n}\n\n.rich-text :deep(h2) {\n  font-size: 32rpx;\n  font-weight: 600;\n  margin: 18rpx 0 14rpx 0;\n  color: #334155;\n}\n\n.rich-text :deep(h3) {\n  font-size: 30rpx;\n  font-weight: 600;\n  margin: 16rpx 0 12rpx 0;\n  color: #475569;\n}\n\n.rich-text :deep(strong) {\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.rich-text :deep(em) {\n  font-style: italic;\n  color: #64748b;\n}\n\n.rich-text :deep(a) {\n  color: #667eea;\n  text-decoration: underline;\n}\n\n.rich-text :deep(img) {\n  max-width: 100%;\n  height: auto;\n  border-radius: 12rpx;\n  margin: 12rpx 0;\n  display: block;\n}\n\n.rich-text :deep(ul), .rich-text :deep(ol) {\n  margin: 12rpx 0;\n  padding-left: 40rpx;\n}\n\n.rich-text :deep(li) {\n  margin: 8rpx 0;\n  line-height: 1.6;\n}\n\n.rich-text :deep(blockquote) {\n  margin: 16rpx 0;\n  padding: 16rpx 20rpx;\n  background: #f8fafc;\n  border-left: 6rpx solid #667eea;\n  border-radius: 0 8rpx 8rpx 0;\n  color: #64748b;\n  font-style: italic;\n}\n\n.rich-text :deep(code) {\n  background: #f1f5f9;\n  padding: 4rpx 8rpx;\n  border-radius: 6rpx;\n  font-family: 'Courier New', monospace;\n  font-size: 24rpx;\n  color: #e11d48;\n}\n\n.rich-text :deep(pre) {\n  background: #1e293b;\n  color: #f1f5f9;\n  padding: 20rpx;\n  border-radius: 12rpx;\n  overflow-x: auto;\n  margin: 16rpx 0;\n}\n\n.rich-text :deep(pre code) {\n  background: transparent;\n  color: inherit;\n  padding: 0;\n}\n\n/* 展开按钮 */\n.expand-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8rpx;\n  margin-top: 16rpx;\n  padding: 12rpx;\n  background: #f8fafc;\n  border-radius: 12rpx;\n  border: 2rpx solid #e2e8f0;\n  transition: all 0.2s ease;\n}\n\n.expand-btn:active {\n  background: #f1f5f9;\n  border-color: #cbd5e1;\n}\n\n.expand-text {\n  font-size: 24rpx;\n  color: #667eea;\n  font-weight: 500;\n}\n\n.expand-icon {\n  font-size: 20rpx;\n  color: #667eea;\n  transition: transform 0.2s ease;\n}\n\n.expand-icon.rotated {\n  transform: rotate(180deg);\n}\n\n/* 查看详情提示 */\n.view-detail-hint {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8rpx;\n  padding: 12rpx;\n  background: rgba(102, 126, 234, 0.05);\n  border-radius: 12rpx;\n  margin-top: 16rpx;\n}\n\n.hint-text {\n  font-size: 24rpx;\n  color: #667eea;\n  font-weight: 500;\n}\n\n.hint-arrow {\n  font-size: 20rpx;\n  color: #667eea;\n}\n\n/* 动画定义 */\n@keyframes fadeInUp {\n  0% {\n    opacity: 0;\n    transform: translateY(30rpx);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 响应式设计 */\n@media (max-width: 750rpx) {\n  .admin-message {\n    gap: 16rpx;\n  }\n  \n  .message-bubble {\n    padding: 20rpx;\n  }\n}\n\n/* 暗黑模式适配 */\n@media (prefers-color-scheme: dark) {\n  .message-bubble {\n    background: #1e293b;\n    border-color: #334155;\n    color: #f1f5f9;\n  }\n  \n  .title-text {\n    color: #f1f5f9;\n  }\n  \n  .rich-text {\n    color: #cbd5e1;\n  }\n  \n  .sender-name {\n    color: #f1f5f9;\n  }\n  \n  .expand-btn {\n    background: #334155;\n    border-color: #475569;\n  }\n  \n  .view-detail-hint {\n    background: rgba(102, 126, 234, 0.1);\n  }\n  \n  .rich-text :deep(h1),\n  .rich-text :deep(h2),\n  .rich-text :deep(h3) {\n    color: #f1f5f9;\n  }\n  \n  .rich-text :deep(strong) {\n    color: #f1f5f9;\n  }\n  \n  .rich-text :deep(blockquote) {\n    background: #334155;\n    color: #94a3b8;\n  }\n  \n  .rich-text :deep(code) {\n    background: #334155;\n    color: #fca5a5;\n  }\n  \n  .rich-text :deep(pre) {\n    background: #0f172a;\n  }\n}\n</style>","import Component from 'E:/project/uniapp/uniapp-news/components/AdminMessage/AdminMessage.vue'\nwx.createComponent(Component)"],"names":["ref","computed","plainTextLength","imageCount","displayContent","uni"],"mappings":"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"}