{"version":3,"file":"WechatLogin.js","sources":["components/WechatLogin/WechatLogin.vue","D:/Hbuild/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RTovcHJvamVjdC91bmlhcHAvdW5pYXBwLW5ld3MvY29tcG9uZW50cy9XZWNoYXRMb2dpbi9XZWNoYXRMb2dpbi52dWU"],"sourcesContent":["<template>\n  <view class=\"login-container\">\n    <!-- 登录页面UI -->\n    <view class=\"login-content\">\n      <image class=\"logo\" src=\"/static/images/logo.png\" mode=\"aspectFit\" />\n      <text class=\"app-name\">您的应用名称</text>\n      <text class=\"welcome-text\">欢迎使用，请先登录</text>\n      \n      <!-- 登录状态显示 -->\n      <view class=\"user-info\" v-if=\"isLoggedIn\">\n        <image class=\"avatar\" :src=\"userInfo.avatarUrl\" mode=\"aspectFill\" />\n        <text class=\"username\">{{ userInfo.nickName }}</text>\n        <text class=\"phone\">{{ userInfo.phoneNumber }}</text>\n        <button class=\"logout-btn\" @click=\"logout\">退出登录</button>\n      </view>\n      \n      <!-- 登录按钮 -->\n      <view class=\"login-section\" v-else>\n        <button \n          class=\"wechat-login-btn\" \n          open-type=\"getPhoneNumber\"\n          @getphonenumber=\"handlePhoneLogin\"\n          :disabled=\"isLoading\"\n        >\n          <image class=\"wechat-icon\" src=\"/static/images/wechat.png\" mode=\"aspectFit\" />\n          <text>{{ isLoading ? '登录中...' : '微信手机号快捷登录' }}</text>\n        </button>\n        \n        <text class=\"login-tip\">登录即表示同意<text class=\"link\">《用户协议》</text>和<text class=\"link\">《隐私政策》</text></text>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\n\n// 响应式数据\nconst isLoggedIn = ref(true)\nconst isLoading = ref(false)\nconst userInfo = ref({\n  openid: '',\n  unionid: '',\n  session_key: '',\n  nickName: '',\n  avatarUrl: '',\n  phoneNumber: '',\n  purePhoneNumber: '',\n  countryCode: '',\n  token: ''\n})\n\n// 页面加载时检查登录状态\nonMounted(() => {\n  checkLoginStatus()\n})\n\n/**\n * 检查本地登录状态\n */\nconst checkLoginStatus = () => {\n  try {\n    const token = uni.getStorageSync('user_token')\n    const savedUserInfo = uni.getStorageSync('user_info')\n    \n    if (token && savedUserInfo) {\n      userInfo.value = JSON.parse(savedUserInfo)\n      isLoggedIn.value = true\n      console.log('用户已登录:', userInfo.value)\n    }\n  } catch (error) {\n    console.error('检查登录状态失败:', error)\n    clearLocalUserData()\n  }\n}\n\n/**\n * 处理微信手机号授权登录\n * @param {Object} e - 手机号授权回调事件\n */\nconst handlePhoneLogin = async (e) => {\n  console.log('手机号授权回调:', e.detail)\n  \n  // 检查用户是否同意授权\n  if (e.detail.errMsg !== 'getPhoneNumber:ok') {\n    handleAuthError(e.detail.errMsg)\n    return\n  }\n  \n  // 开始登录流程\n  await performLogin(e.detail)\n}\n\n/**\n * 处理授权错误\n * @param {String} errMsg - 错误信息\n */\nconst handleAuthError = (errMsg) => {\n  let message = '授权失败'\n  \n  switch (errMsg) {\n    case 'getPhoneNumber:fail user deny':\n      message = '用户拒绝授权手机号'\n      break\n    case 'getPhoneNumber:fail':\n      message = '获取手机号失败，请重试'\n      break\n    default:\n      message = '授权异常，请重试'\n  }\n  \n  uni.showToast({\n    title: message,\n    icon: 'none',\n    duration: 3000\n  })\n}\n\n/**\n * 执行登录流程\n * @param {Object} phoneDetail - 手机号授权详情\n */\nconst performLogin = async (phoneDetail) => {\n  isLoading.value = true\n  \n  try {\n    // 1. 获取微信登录code\n    const loginResult = await getWeChatLoginCode()\n    \n    // 2. 准备登录数据\n    const loginData = {\n      code: loginResult.code,\n      encryptedData: phoneDetail.encryptedData,\n      iv: phoneDetail.iv,\n      cloudID: phoneDetail.cloudID // 如果使用云开发\n    }\n    \n    // 3. 调用后端登录接口\n    const response = await callLoginAPI(loginData)\n    \n    // 4. 处理登录成功\n    await handleLoginSuccess(response)\n    \n  } catch (error) {\n    console.error('登录失败:', error)\n    handleLoginError(error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n/**\n * 获取微信登录code\n */\nconst getWeChatLoginCode = () => {\n  return new Promise((resolve, reject) => {\n    uni.login({\n      provider: 'weixin',\n      success: (result) => {\n        if (result.code) {\n          console.log('获取微信登录code成功:', result.code)\n          resolve(result)\n        } else {\n          reject(new Error('获取微信登录code失败'))\n        }\n      },\n      fail: (error) => {\n        console.error('微信登录失败:', error)\n        reject(error)\n      }\n    })\n  })\n}\n\n/**\n * 调用后端登录API\n * @param {Object} loginData - 登录数据\n */\nconst callLoginAPI = (loginData) => {\n  return new Promise((resolve, reject) => {\n    uni.request({\n      url: 'https://your-api-domain.com/api/auth/wechat-phone-login', // 替换为您的API地址\n      method: 'POST',\n      data: loginData,\n      header: {\n        'content-type': 'application/json'\n      },\n      success: (response) => {\n        console.log('登录API响应:', response)\n        \n        if (response.statusCode === 200 && response.data.success) {\n          resolve(response.data)\n        } else {\n          reject(new Error(response.data.message || '登录失败'))\n        }\n      },\n      fail: (error) => {\n        console.error('请求登录API失败:', error)\n        reject(error)\n      }\n    })\n  })\n}\n\n/**\n * 处理登录成功\n * @param {Object} response - 登录成功响应\n */\nconst handleLoginSuccess = async (response) => {\n  try {\n    const { data } = response\n    \n    // 更新用户信息\n    userInfo.value = {\n      openid: data.openid,\n      unionid: data.unionid,\n      session_key: data.session_key,\n      nickName: data.nickName || '微信用户',\n      avatarUrl: data.avatarUrl || '/static/images/default-avatar.png',\n      phoneNumber: data.phoneNumber,\n      purePhoneNumber: data.purePhoneNumber,\n      countryCode: data.countryCode,\n      token: data.token\n    }\n    \n    // 保存到本地存储\n    uni.setStorageSync('user_token', data.token)\n    uni.setStorageSync('user_info', JSON.stringify(userInfo.value))\n    \n    // 更新登录状态\n    isLoggedIn.value = true\n    \n    // 显示成功提示\n    uni.showToast({\n      title: '登录成功！',\n      icon: 'success',\n      duration: 2000\n    })\n    \n    // 可选：跳转到主页或其他页面\n    setTimeout(() => {\n      uni.switchTab({\n        url: '/pages/index/index'\n      })\n    }, 2000)\n    \n    console.log('登录成功，用户信息:', userInfo.value)\n    \n  } catch (error) {\n    console.error('处理登录成功数据失败:', error)\n    throw error\n  }\n}\n\n/**\n * 处理登录错误\n * @param {Error} error - 错误对象\n */\nconst handleLoginError = (error) => {\n  let message = '登录失败，请重试'\n  \n  if (error.message) {\n    message = error.message\n  }\n  \n  uni.showToast({\n    title: message,\n    icon: 'none',\n    duration: 3000\n  })\n}\n\n/**\n * 退出登录\n */\nconst logout = () => {\n  uni.showModal({\n    title: '确认退出',\n    content: '确定要退出当前账号吗？',\n    confirmColor: '#ff4d4f',\n    success: (res) => {\n      if (res.confirm) {\n        performLogout()\n      }\n    }\n  })\n}\n\n/**\n * 执行退出登录\n */\nconst performLogout = () => {\n  try {\n    // 清除本地数据\n    clearLocalUserData()\n    \n    // 重置状态\n    isLoggedIn.value = false\n    resetUserInfo()\n    \n    uni.showToast({\n      title: '已退出登录',\n      icon: 'success'\n    })\n    \n    console.log('用户已退出登录')\n    \n  } catch (error) {\n    console.error('退出登录失败:', error)\n    uni.showToast({\n      title: '退出失败',\n      icon: 'none'\n    })\n  }\n}\n\n/**\n * 清除本地用户数据\n */\nconst clearLocalUserData = () => {\n  try {\n    uni.removeStorageSync('user_token')\n    uni.removeStorageSync('user_info')\n  } catch (error) {\n    console.error('清除本地数据失败:', error)\n  }\n}\n\n/**\n * 重置用户信息\n */\nconst resetUserInfo = () => {\n  userInfo.value = {\n    openid: '',\n    unionid: '',\n    session_key: '',\n    nickName: '',\n    avatarUrl: '',\n    phoneNumber: '',\n    purePhoneNumber: '',\n    countryCode: '',\n    token: ''\n  }\n}\n\n/**\n * 检查登录状态（供其他页面调用）\n */\nconst isUserLoggedIn = () => {\n  return isLoggedIn.value && userInfo.value.token\n}\n\n/**\n * 获取用户token（供API调用使用）\n */\nconst getUserToken = () => {\n  return userInfo.value.token || uni.getStorageSync('user_token')\n}\n\n/**\n * 获取用户信息（供其他页面使用）\n */\nconst getUserInfo = () => {\n  return userInfo.value\n}\n\n// 导出方法供其他页面使用\ndefineExpose({\n  isUserLoggedIn,\n  getUserToken,\n  getUserInfo,\n  logout: performLogout\n})\n</script>\n\n<style lang=\"scss\">\n.login-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40rpx;\n}\n\n.login-content {\n  width: 100%;\n  max-width: 640rpx;\n  background: #fff;\n  border-radius: 32rpx;\n  padding: 80rpx 60rpx;\n  text-align: center;\n  box-shadow: 0 20rpx 60rpx rgba(0, 0, 0, 0.1);\n}\n\n.logo {\n  width: 120rpx;\n  height: 120rpx;\n  margin-bottom: 32rpx;\n}\n\n.app-name {\n  display: block;\n  font-size: 48rpx;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 16rpx;\n}\n\n.welcome-text {\n  display: block;\n  font-size: 28rpx;\n  color: #666;\n  margin-bottom: 80rpx;\n}\n\n// 已登录用户信息\n.user-info {\n  .avatar {\n    width: 120rpx;\n    height: 120rpx;\n    border-radius: 50%;\n    margin-bottom: 24rpx;\n  }\n  \n  .username {\n    display: block;\n    font-size: 36rpx;\n    font-weight: 500;\n    color: #333;\n    margin-bottom: 12rpx;\n  }\n  \n  .phone {\n    display: block;\n    font-size: 28rpx;\n    color: #666;\n    margin-bottom: 40rpx;\n  }\n  \n  .logout-btn {\n    background: #ff4d4f;\n    color: #fff;\n    border: none;\n    border-radius: 50rpx;\n    padding: 24rpx 48rpx;\n    font-size: 28rpx;\n    \n    &::after {\n      border: none;\n    }\n  }\n}\n\n// 登录区域\n.login-section {\n  .wechat-login-btn {\n    width: 100%;\n    background: #07c160;\n    color: #fff;\n    border: none;\n    border-radius: 50rpx;\n    padding: 32rpx;\n    font-size: 32rpx;\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 40rpx;\n    \n    &:disabled {\n      background: #ccc;\n    }\n    \n    &::after {\n      border: none;\n    }\n    \n    .wechat-icon {\n      width: 40rpx;\n      height: 40rpx;\n      margin-right: 16rpx;\n    }\n  }\n  \n  .login-tip {\n    font-size: 24rpx;\n    color: #999;\n    line-height: 1.5;\n    \n    .link {\n      color: #007aff;\n    }\n  }\n}\n</style>","import Component from 'E:/project/uniapp/uniapp-news/components/WechatLogin/WechatLogin.vue'\nwx.createComponent(Component)"],"names":["ref","onMounted","uni","Component"],"mappings":"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"}